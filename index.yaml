basePath: /api/v2
consumes:
  - application/json
host: console.jumpcloud.com
info:
  contact:
    name: JumpCloud Support
    url: 'https://jumpcloud.com/support/contact-jumpcloud-support'
  description: |
    # Overview

    JumpCloud's V2 API. This set of endpoints allows JumpCloud customers to manage objects, groupings and mappings and interact with the JumpCloud Graph.

    ## API Best Practices

    Read the linked Help Article below for guidance on retrying failed requests to JumpCloud's REST API, as well as best practices for structuring subsequent retry requests. Customizing retry mechanisms based on these recommendations will increase the reliability and dependability of your API calls.

    Covered topics include:
    1. Important Considerations
    2. Supported HTTP Request Methods
    3. Response codes
    4. API Key rotation
    5. Paginating
    6. Error handling
    7. Retry rates

    [JumpCloud Help Center - API Best Practices](https://support.jumpcloud.com/support/s/article/JumpCloud-API-Best-Practices)

    # Directory Objects

    This API offers the ability to interact with some of our core features; otherwise known as Directory Objects. The Directory Objects are:

    * Commands
    * Policies
    * Policy Groups
    * Applications
    * Systems
    * Users
    * User Groups
    * System Groups
    * Radius Servers
    * Directories: Office 365, LDAP,G-Suite, Active Directory
    * Duo accounts and applications.

    The Directory Object is an important concept to understand in order to successfully use JumpCloud API.

    ## JumpCloud Graph

    We've also introduced the concept of the JumpCloud Graph along with  Directory Objects. The Graph is a powerful aspect of our platform which will enable you to associate objects with each other, or establish membership for certain objects to become members of other objects.

    Specific `GET` endpoints will allow you to traverse the JumpCloud Graph to return all indirect and directly bound objects in your organization.

    | ![alt text](https://s3.amazonaws.com/jumpcloud-kb/Knowledge+Base+Photos/API+Docs/jumpcloud_graph.png "JumpCloud Graph Model Example") |
    |:--:|
    | **This diagram highlights our association and membership model as it relates to Directory Objects.** |

    # API Key

    ## Access Your API Key

    To locate your API Key:

    1. Log into the [JumpCloud Admin Console](https://console.jumpcloud.com/).
    2. Go to the username drop down located in the top-right of the Console.
    3. Retrieve your API key from API Settings.

    ## API Key Considerations

    This API key is associated to the currently logged in administrator. Other admins will have different API keys.

    **WARNING** Please keep this API key secret, as it grants full access to any data accessible via your JumpCloud console account.

    You can also reset your API key in the same location in the JumpCloud Admin Console.

    ## Recycling or Resetting Your API Key

    In order to revoke access with the current API key, simply reset your API key. This will render all calls using the previous API key inaccessible.

    Your API key will be passed in as a header with the header name "x-api-key".

    ```bash
    curl -H "x-api-key: [YOUR_API_KEY_HERE]" "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/systemgroups"
    ```

    # System Context

    * [Introduction](#introduction)
    * [Supported endpoints](#supported-endpoints)
    * [Response codes](#response-codes)
    * [Authentication](#authentication)
    * [Additional examples](#additional-examples)
    * [Third party](#third-party)

    ## Introduction

    JumpCloud System Context Authorization is an alternative way to authenticate with a subset of JumpCloud's REST APIs. Using this method, a system can manage its information and resource associations, allowing modern auto provisioning environments to scale as needed.

    **Notes:**

     * The following documentation applies to Linux Operating Systems only.
     * Systems that have been automatically enrolled using Apple's Device Enrollment Program (DEP) or systems enrolled using the User Portal install are not eligible to use the System Context API to prevent unauthorized access to system groups and resources. If a script that utilizes the System Context API is invoked on a system enrolled in this way, it will display an error.

    ## Supported Endpoints

    JumpCloud System Context Authorization can be used in conjunction with Systems endpoints found in the V1 API and certain System Group endpoints found in the v2 API.

    * A system may fetch, alter, and delete metadata about itself, including manipulating a system's Group and Systemuser associations,
      * `/api/systems/{system_id}` | [`GET`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_get) [`PUT`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_put)
    * A system may delete itself from your JumpCloud organization
      * `/api/systems/{system_id}` | [`DELETE`](https://docs.jumpcloud.com/api/1.0/index.html#operation/systems_delete)
    * A system may fetch its direct resource associations under v2 (Groups)
      * `/api/v2/systems/{system_id}/memberof` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemGroupMembership)
      * `/api/v2/systems/{system_id}/associations` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemAssociationsList)
      * `/api/v2/systems/{system_id}/users` | [`GET`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemTraverseUser)
    * A system may alter its direct resource associations under v2 (Groups)
      * `/api/v2/systems/{system_id}/associations` | [`POST`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemAssociationsPost)
    * A system may alter its System Group associations
      * `/api/v2/systemgroups/{group_id}/members` | [`POST`](https://docs.jumpcloud.com/api/2.0/index.html#operation/graph_systemGroupMembersPost)
        * _NOTE_ If a system attempts to alter the system group membership of a different system the request will be rejected

    ## Response Codes

    If endpoints other than those described above are called using the System Context API, the server will return a `401` response.

    ## Authentication

    To allow for secure access to our APIs, you must authenticate each API request.
    JumpCloud System Context Authorization uses [HTTP Signatures](https://tools.ietf.org/html/draft-cavage-http-signatures-00) to authenticate API requests.
    The HTTP Signatures sent with each request are similar to the signatures used by the Amazon Web Services REST API.
    To help with the request-signing process, we have provided an [example bash script](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh). This example API request simply requests the entire system record. You must be root, or have permissions to access the contents of the `/opt/jc` directory to generate a signature.

    Here is a breakdown of the example script with explanations.

    First, the script extracts the systemKey from the JSON formatted `/opt/jc/jcagent.conf` file.

    ```bash
    #!/bin/bash
    conf="`cat /opt/jc/jcagent.conf`"
    regex="systemKey\":\"(\w+)\""

    if [[ $conf =~ $regex ]] ; then
      systemKey="${BASH_REMATCH[1]}"
    fi
    ```

    Then, the script retrieves the current date in the correct format.

    ```bash
    now=`date -u "+%a, %d %h %Y %H:%M:%S GMT"`;
    ```

    Next, we build a signing string to demonstrate the expected signature format. The signed string must consist of the [request-line](https://tools.ietf.org/html/rfc2616#page-35) and the date header, separated by a newline character.

    ```bash
    signstr="GET /api/systems/${systemKey} HTTP/1.1\ndate: ${now}"
    ```

    The next step is to calculate and apply the signature. This is a two-step process:

    1. Create a signature from the signing string using the JumpCloud Agent private key: ``printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key``
    2. Then Base64-encode the signature string and trim off the newline characters: ``| openssl enc -e -a | tr -d '\n'``

    The combined steps above result in:

    ```bash
    signature=`printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\n'` ;
    ```

    Finally, we make sure the API call sending the signature has the same Authorization and Date header values, HTTP method, and URL that were used in the signing string.

    ```bash
    curl -iq \
      -H "Accept: application/json" \
      -H "Content-Type: application/json" \
      -H "Date: ${now}" \
      -H "Authorization: Signature keyId=\"system/${systemKey}\",headers=\"request-line date\",algorithm=\"rsa-sha256\",signature=\"${signature}\"" \
      --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systems/${systemKey}
    ```

    ### Input Data

    All PUT and POST methods should use the HTTP Content-Type header with a value of 'application/json'. PUT methods are used for updating a record. POST methods are used to create a record.

    The following example demonstrates how to update the `displayName` of the system.

    ```bash
    signstr="PUT /api/systems/${systemKey} HTTP/1.1\ndate: ${now}"
    signature=`printf "$signstr" | openssl dgst -sha256 -sign /opt/jc/client.key | openssl enc -e -a | tr -d '\n'` ;

    curl -iq \
      -d "{\"displayName\" : \"updated-system-name-1\"}" \
      -X "PUT" \
      -H "Content-Type: application/json" \
      -H "Accept: application/json" \
      -H "Date: ${now}" \
      -H "Authorization: Signature keyId=\"system/${systemKey}\",headers=\"request-line date\",algorithm=\"rsa-sha256\",signature=\"${signature}\"" \
      --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systems/${systemKey}
    ```

    ### Output Data

    All results will be formatted as JSON.

    Here is an abbreviated example of response output:

    ```json
    {
      "_id": "625ee96f52e144993e000015",
      "agentServer": "lappy386",
      "agentVersion": "0.9.42",
      "arch": "x86_64",
      "displayName": "ubuntu-1204",
      "firstContact": "2013-10-16T19:30:55.611Z",
      "hostname": "ubuntu-1204"
      ...
    ```

    ## Additional Examples

    ### Signing Authentication Example

    This example demonstrates how to make an authenticated request to fetch the JumpCloud record for this system.

    [SigningExample.sh](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/shell/SigningExample.sh)

    ### Shutdown Hook

    This example demonstrates how to make an authenticated request on system shutdown.
    Using an init.d script registered at run level 0, you can call the System Context API as the system is shutting down.

    [Instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) is an example of an init.d script that only runs at system shutdown.

    After customizing the [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) script, you should install it on the system(s) running the JumpCloud agent.

    1. Copy the modified [instance-shutdown-initd](https://github.com/TheJumpCloud/SystemContextAPI/blob/master/examples/instance-shutdown-initd) to `/etc/init.d/instance-shutdown`.
    2. On Ubuntu systems, run `update-rc.d instance-shutdown defaults`. On RedHat/CentOS systems, run `chkconfig --add instance-shutdown`.

    ## Third Party

    ### Chef Cookbooks

    [https://github.com/nshenry03/jumpcloud](https://github.com/nshenry03/jumpcloud)

    [https://github.com/cjs226/jumpcloud](https://github.com/cjs226/jumpcloud)

    # Multi-Tenant Portal Headers

    Multi-Tenant Organization API Headers are available for JumpCloud Admins to use when making API requests from Organizations that have multiple managed organizations.

    The `x-org-id` is a required header for all multi-tenant admins when making API requests to JumpCloud. This header will define to which organization you would like to make the request.

    **NOTE** Single Tenant Admins do not need to provide this header when making an API request.

    ## Header Value

    `x-org-id`

    ## API Response Codes

    * `400` Malformed ID.
    * `400` x-org-id and Organization path ID do not match.
    * `401` ID not included for multi-tenant admin
    * `403` ID included on unsupported route.
    * `404` Organization ID Not Found.

    ```bash
    curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/directories \
      -H 'accept: application/json' \
      -H 'content-type: application/json' \
      -H 'x-api-key: {API_KEY}' \
      -H 'x-org-id: {ORG_ID}'

    ```

    ## To Obtain an Individual Organization ID via the UI

    As a prerequisite, your Primary Organization will need to be setup for Multi-Tenancy. This provides access to the Multi-Tenant Organization Admin Portal.

    1. Log into JumpCloud [Admin Console](https://console.jumpcloud.com). If you are a multi-tenant Admin, you will automatically be routed to the Multi-Tenant Admin Portal.
    2. From the Multi-Tenant Portal's primary navigation bar, select the Organization you'd like to access.
    3. You will automatically be routed to that Organization's Admin Console.
    4. Go to Settings in the sub-tenant's primary navigation.
    5. You can obtain your Organization ID below your Organization's Contact Information on the Settings page.

    ## To Obtain All Organization IDs via the API

    * You can make an API request to this endpoint using the API key of your Primary Organization.  `https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/organizations/` This will return all your managed organizations.

    ```bash
    curl -X GET \
      https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/organizations/ \
      -H 'Accept: application/json' \
      -H 'Content-Type: application/json' \
      -H 'x-api-key: {API_KEY}'
    ```

    # SDKs

    You can find language specific SDKs that can help you kickstart your Integration with JumpCloud in the following GitHub repositories:

    * [Python](https://github.com/TheJumpCloud/jcapi-python)
    * [Go](https://github.com/TheJumpCloud/jcapi-go)
    * [Ruby](https://github.com/TheJumpCloud/jcapi-ruby)
    * [Java](https://github.com/TheJumpCloud/jcapi-java)
  title: JumpCloud API
  version: '2.0'
parameters:
  'trait:GraphObjectWithPaths:details':
    description: This will provide detail descriptive response for the request.
    enum:
      - v1
    in: query
    name: details
    type: string
  'trait:authnfallbackpolicy:resourceType':
    in: path
    items:
      enum:
        - userportal
        - application
        - ldap
      type: string
    name: resource_type
    required: true
    type: string
  'trait:bulkJobQueryParameters:suppressEmail':
    description: |
      An option indicating whether to suppress the job results email that will
      otherwise be sent to the Administrator who created the job. If true, the
      email won't be sent. If omitted or false, the email will be sent.
    in: query
    name: suppressEmail
    type: boolean
  'trait:fields:fields':
    default: []
    description: |
      The comma separated fields included in the returned records.
      If omitted, the default list of fields will be returned.
    in: query
    items:
      type: string
    name: fields
    type: array
  'trait:filter:filter':
    default: []
    description: |-
      A filter to apply to the query.

      **Filter structure**: `<field>:<operator>:<value>`.

      **field** = Populate with a valid field from an endpoint response.

      **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.
      _Note: v1 operators differ from v2 operators._

      **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

      **EX:** `GET /api/v2/groups?filter=name:eq:Test+Group`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:graphTargetsActiveDirectory:targets':
    description: Targets which a "active_directory" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsApplication:targets':
    description: Targets which a "application" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsCommand:targets':
    description: Targets which a "command" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsGSuite:targets':
    description: Targets which a "g_suite" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsIDPRoutingPolicy:targets':
    description: Targets which a "idp_routing_policy" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsLdapServer:targets':
    description: Targets which a "ldap_server" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsOffice365:targets':
    description: Targets which a "office_365" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsPolicy:targets':
    description: Targets which a "policy" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsPolicyGroup:targets':
    description: Targets which a "policy_group" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsRadiusServer:targets':
    description: Targets which a "radius_server" can be associated to.
    in: query
    items:
      enum:
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsRule:targets':
    description: Targets which a "rule" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSoftwareApp:targets':
    description: Targets which a "software_app" can be associated to.
    in: query
    items:
      enum:
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSystem:targets':
    description: Targets which a "system" can be associated to.
    in: query
    items:
      enum:
        - command
        - policy
        - policy_group
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsSystemGroup:targets':
    description: Targets which a "system_group" can be associated to.
    in: query
    items:
      enum:
        - command
        - policy
        - policy_group
        - user
        - user_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsUser:targets':
    description: Targets which a "user" can be associated to.
    in: query
    items:
      enum:
        - active_directory
        - application
        - g_suite
        - idp_routing_policy
        - ldap_server
        - office_365
        - radius_server
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:graphTargetsUserGroup:targets':
    description: Targets which a "user_group" can be associated to.
    in: query
    items:
      enum:
        - active_directory
        - application
        - g_suite
        - idp_routing_policy
        - ldap_server
        - office_365
        - radius_server
        - system
        - system_group
      type: string
    name: targets
    required: true
    type: array
  'trait:gsuite:allowEmptyFields':
    default: false
    description: '[EXPERIMENTAL] Allow empty fields of the user object to be sent in the response'
    in: query
    name: allowEmptyFields
    type: boolean
  'trait:gsuite:maxResults':
    description: 'Google Directory API maximum number of results per page. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: maxResults
    type: integer
  'trait:gsuite:orderBy':
    description: 'Google Directory API sort field parameter. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: orderBy
    type: string
  'trait:gsuite:pageToken':
    description: 'Google Directory API token used to access the next page of results. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: pageToken
    type: string
  'trait:gsuite:query':
    description: 'Google Directory API search parameter. See https://developers.google.com/admin-sdk/directory/v1/guides/search-users.'
    in: query
    name: query
    type: string
  'trait:gsuite:sortOrder':
    description: 'Google Directory API sort direction parameter. See https://developers.google.com/admin-sdk/directory/reference/rest/v1/users/list.'
    in: query
    name: sortOrder
    type: string
  'trait:limit:limit':
    default: 10
    description: The number of records to return at once. Limited to 100.
    in: query
    name: limit
    type: integer
  'trait:limitDefault1:limit':
    default: 1
    in: query
    maximum: 100
    minimum: 0
    name: limit
    type: integer
  'trait:limitMax100:limit':
    default: 10
    in: query
    maximum: 100
    minimum: 0
    name: limit
    type: integer
  'trait:listCount:x-total-count':
    in: header
    name: x-total-count
    type: integer
  'trait:listCount:x-unfiltered-total-count':
    description: 'If provided in the request with any non-empty value, this header will be returned on the response populated with the total count of objects without filters taken into account'
    in: header
    name: x-unfiltered-total-count
    type: integer
  'trait:multiTenantRequestHeaders:x-org-id':
    description: Organization identifier that can be obtained from console settings.
    in: header
    name: x-org-id
    type: string
  'trait:o365:ConsistencyLevel':
    description: 'Defines the consistency header for O365 requests. See https://docs.microsoft.com/en-us/graph/api/user-list?view=graph-rest-1.0&tabs=http#request-headers'
    in: header
    name: ConsistencyLevel
    type: string
  'trait:search:search':
    default: ''
    description: The search string to query records
    in: query
    name: search
    type: string
  'trait:skip:skip':
    default: 0
    description: The offset into the records to return.
    in: query
    minimum: 0
    name: skip
    required: false
    type: integer
  'trait:sort:sort':
    default: []
    description: |
      The comma separated fields used to sort the collection.
      Default sort is ascending, prefix with `-` to sort descending.
    in: query
    items:
      type: string
    name: sort
    type: array
  'trait:sortIgnoreCase:sortIgnoreCase':
    default: []
    description: |
      The comma separated fields used to sort the collection, ignoring case.
      Default sort is ascending, prefix with `-` to sort descending.
    in: query
    items:
      type: string
    name: sortIgnoreCase
    type: array
  'trait:systemContextAuth:Authorization':
    description: Authorization header for the System Context API
    in: header
    name: Authorization
    type: string
  'trait:systemContextAuth:Date':
    description: Current date header for the System Context API
    in: header
    name: Date
    type: string
  'trait:systemInsightsCertificatesFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
      Note: You can only filter by `system_id` and `common_name`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsControlsFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
      Note: You can only filter by `system_id` and `name`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsFilter:filter':
    default: []
    description: |
      Supported operators are: eq, in. e.g:
      Filter for single value:
      `filter=field:eq:value`
      Filter for any value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsFilterUptime:filter':
    default: []
    description: |
      Supported operators are: eq, gte, in. e.g:
      Filter for single value:
      `filter=field:gte:value`
      Filter for any value in a list: (note "pipe" character: `|` separating values)
      `filter=field:in:value1|value2|value3`
    in: query
    items:
      type: string
    name: filter
    type: array
  'trait:systemInsightsLimit:limit':
    default: 10
    in: query
    maximum: 10000
    minimum: 0
    name: limit
    type: integer
  'trait:systemInsightsSort:sort':
    default: []
    description: |
      The comma separated fields used to sort the collection.
      Default sort is ascending, prefix with `-` to sort descending. e.g:
      Sort by single field:
      `sort=field`
      Sort descending by single field:
      `sort=-field`
      Sort by multiple fields:
      `sort=field1,-field2,field3`
    in: query
    items:
      type: string
    name: sort
    type: array
paths:
  '/users/{user_id}/systemgroups':
    get:
      description: |-
        This endpoint will return all System Groups bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{UserID}/systemgroups\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseSystemGroup
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the System Groups bound to a User
      tags:
        - Graph
        - Users
      x-internal: false
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systemgroups?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systemgroups"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systemgroups?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
  '/users/{user_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{UserID}/systems\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a User
      tags:
        - Graph
        - Users
      x-internal: false
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    x-functionalities-tags:
      - users-read
      - systems
  '/users/{user_id}/emails':
    parameters:
      - description: ObjectID of the User.
        in: path
        name: user_id
        required: true
        type: string
    post:
      description: This endpoint allows you to send a specific email to a user without waiting for or triggering a workflow.
      operationId: users_sendEmails
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/emailrequest'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Send User Emails
      tags:
        - Users
      x-internal: true
      x-jumpcloud-post-type: perform action
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/emails \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"emailType":"activation"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/emails"

            payload = {"emailType": "activation"}
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/users/{user_id}/emails' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"emailType":"activation"}'
    x-functionalities-tags:
      - directory
  /systemusers:
    delete:
      description: The endpoint deletes all system users which match the specified selection.
      operationId: systemusers_deleteSelection
      responses:
        '200':
          description: OK
      security:
        - x-api-key: []
      summary: Delete user selection
      tags:
        - Systemusers
      x-functionalities-tags:
        - users-delete
      x-internal: true
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns all systemusers.

        #### Sample Request

        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: systemusers_list
      parameters:
        - default: 10
          description: The number of records to return at once.
          in: query
          name: limit
          type: integer
        - default: 0
          description: The offset into the records to return.
          in: query
          name: skip
          type: integer
        - default: ''
          description: |
            The space separated fields used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          in: query
          name: sort
          type: string
        - default: ''
          description: |
            The space separated fields included in the returned records.
            If omitted the default list of fields will be returned.
          in: query
          name: fields
          type: string
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:search:search'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/systemuserslist'
        '401':
          description: ''
      security:
        - x-api-key: []
      summary: List all system users
      tags:
        - Systemusers
      x-functionalities-tags:
        - users-read
      x-internal: false
      x-scopes:
        - commandrunner.legacy
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers?limit=10&skip=0&sort=&fields=&filter=SOME_STRING_VALUE&search=SOME_STRING_VALUE' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers"

            querystring = {"limit":"10","skip":"0","sort":"","fields":"","filter":"SOME_STRING_VALUE","search":"SOME_STRING_VALUE"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers?limit=10&skip=0&sort=&fields=&filter=SOME_STRING_VALUE&search=SOME_STRING_VALUE' -Method GET -Headers $headers
    post:
      description: |-
        "This endpoint allows you to create a new system user.

        #### Default User State
        The `state` of the user can be explicitly passed in or omitted. If
        `state` is omitted from the request, then the user will get created
        using the value returned from the
        [Get an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organizations_get)
        endpoint. The default user state for manually created users is stored in
        `settings.newSystemUserStateDefaults.manualEntry`

        These default state values can be changed in the admin portal settings
        or by using the
        [Update an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organization_put)
        endpoint.

        #### Sample Request

        ```
        curl -X POST https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{
              "username":"{username}",
              "email":"{email_address}",
              "firstname":"{Name}",
              "lastname":"{Name}"
            }'
        ```
      operationId: systemusers_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/systemuserputpost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - description: |-
            Pass this query parameter when a client wants all validation errors
            to be returned with a detailed error response for the form field
            specified. The current form fields are allowed:

            * `password`

            #### Password validation flag
            Use the `password` validation flag to receive details on a possible
            bad request response
            ```
            ?fullValidationDetails=password
            ```
            Without the flag, default behavior will be a normal 400 with only
            a single validation string error
            #### Expected Behavior
            Clients can expect a list of validation error mappings for the
            validation query field in the details provided on the response:
            ```
            {
              "code": 400,
              "message": "Password validation fail",
              "status": "INVALID_ARGUMENT",
              "details": [
                  {
                    "fieldViolationsList": [
                      {"field": "password", "description": "specialCharacter"}
                    ],
                    '@type': 'type.googleapis.com/google.rpc.BadRequest',
                  },
              ],
            },
            ```
          in: query
          name: fullValidationDetails
          type: string
      responses:
        '200':
          description: User added successfully
          schema:
            $ref: '#/definitions/systemuserreturn'
        '400':
          description: User already exists or Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
      security:
        - x-api-key: []
      summary: Create a system user
      tags:
        - Systemusers
      x-functionalities-tags:
        - users-create-staged
        - user-create-active
      x-internal: false
      x-scopes:
        - users
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers?fullValidationDetails=SOME_STRING_VALUE' \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"account_locked":true,"activated":true,"addresses":[{"country":"string","extendedAddress":"string","locality":"string","poBox":"string","postalCode":"string","region":"string","streetAddress":"string","type":"string"}],"allow_public_key":true,"alternateEmail":"string","attributes":[{"name":"string","value":"string"}],"company":"string","costCenter":"string","department":"string","description":"string","disableDeviceMaxLoginAttempts":true,"displayname":"string","email":"string","employeeIdentifier":"string","employeeType":"string","enable_managed_uid":true,"enable_user_portal_multifactor":true,"external_dn":"string","external_password_expiration_date":"2019-08-24T14:15:22Z","external_source_type":"string","externally_managed":true,"firstname":"string","jobTitle":"string","lastname":"string","ldap_binding_user":true,"location":"string","managedAppleId":"string","manager":"string","mfa":{"configured":true,"exclusion":true,"exclusionDays":1,"exclusionUntil":"2019-08-24T14:15:22Z"},"middlename":"string","password":"string","password_never_expires":true,"passwordless_sudo":true,"phoneNumbers":[{"number":"string","type":"string"}],"public_key":"string","recoveryEmail":{"address":"string"},"relationships":[{"type":"string","value":"string"}],"restrictedFields":[{"field":"addresses","id":"string","type":"active_directory"}],"samba_service_user":true,"state":"STAGED","sudo":true,"suspended":true,"tags":["string"],"unix_guid":1,"unix_uid":1,"username":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers"

            querystring = {"fullValidationDetails":"SOME_STRING_VALUE"}

            payload = {
                "account_locked": True,
                "activated": True,
                "addresses": [
                    {
                        "country": "string",
                        "extendedAddress": "string",
                        "locality": "string",
                        "poBox": "string",
                        "postalCode": "string",
                        "region": "string",
                        "streetAddress": "string",
                        "type": "string"
                    }
                ],
                "allow_public_key": True,
                "alternateEmail": "string",
                "attributes": [
                    {
                        "name": "string",
                        "value": "string"
                    }
                ],
                "company": "string",
                "costCenter": "string",
                "department": "string",
                "description": "string",
                "disableDeviceMaxLoginAttempts": True,
                "displayname": "string",
                "email": "string",
                "employeeIdentifier": "string",
                "employeeType": "string",
                "enable_managed_uid": True,
                "enable_user_portal_multifactor": True,
                "external_dn": "string",
                "external_password_expiration_date": "2019-08-24T14:15:22Z",
                "external_source_type": "string",
                "externally_managed": True,
                "firstname": "string",
                "jobTitle": "string",
                "lastname": "string",
                "ldap_binding_user": True,
                "location": "string",
                "managedAppleId": "string",
                "manager": "string",
                "mfa": {
                    "configured": True,
                    "exclusion": True,
                    "exclusionDays": 1,
                    "exclusionUntil": "2019-08-24T14:15:22Z"
                },
                "middlename": "string",
                "password": "string",
                "password_never_expires": True,
                "passwordless_sudo": True,
                "phoneNumbers": [
                    {
                        "number": "string",
                        "type": "string"
                    }
                ],
                "public_key": "string",
                "recoveryEmail": {"address": "string"},
                "relationships": [
                    {
                        "type": "string",
                        "value": "string"
                    }
                ],
                "restrictedFields": [
                    {
                        "field": "addresses",
                        "id": "string",
                        "type": "active_directory"
                    }
                ],
                "samba_service_user": True,
                "state": "STAGED",
                "sudo": True,
                "suspended": True,
                "tags": ["string"],
                "unix_guid": 1,
                "unix_uid": 1,
                "username": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers?fullValidationDetails=SOME_STRING_VALUE' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"account_locked":true,"activated":true,"addresses":[{"country":"string","extendedAddress":"string","locality":"string","poBox":"string","postalCode":"string","region":"string","streetAddress":"string","type":"string"}],"allow_public_key":true,"alternateEmail":"string","attributes":[{"name":"string","value":"string"}],"company":"string","costCenter":"string","department":"string","description":"string","disableDeviceMaxLoginAttempts":true,"displayname":"string","email":"string","employeeIdentifier":"string","employeeType":"string","enable_managed_uid":true,"enable_user_portal_multifactor":true,"external_dn":"string","external_password_expiration_date":"2019-08-24T14:15:22Z","external_source_type":"string","externally_managed":true,"firstname":"string","jobTitle":"string","lastname":"string","ldap_binding_user":true,"location":"string","managedAppleId":"string","manager":"string","mfa":{"configured":true,"exclusion":true,"exclusionDays":1,"exclusionUntil":"2019-08-24T14:15:22Z"},"middlename":"string","password":"string","password_never_expires":true,"passwordless_sudo":true,"phoneNumbers":[{"number":"string","type":"string"}],"public_key":"string","recoveryEmail":{"address":"string"},"relationships":[{"type":"string","value":"string"}],"restrictedFields":[{"field":"addresses","id":"string","type":"active_directory"}],"samba_service_user":true,"state":"STAGED","sudo":true,"suspended":true,"tags":["string"],"unix_guid":1,"unix_uid":1,"username":"string"}'
    x-functionalities-tags:
      - users
  /systemusers-lite:
    get:
      description: This endpoint returns all system users in a lightweight representation.
      operationId: systemusers_listLite
      responses:
        '200':
          description: OK
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/systemuserlite'
                type: array
              totalCount:
                type: integer
            type: object
      security:
        - x-api-key: []
      summary: Your GET endpoint
      tags:
        - Systemusers
      x-internal: true
      x-scopes:
        - commandrunner.legacy
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers-lite \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers-lite"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/systemusers-lite' -Method GET -Headers $headers
    x-functionalities-tags:
      - users
  '/administrators/{administrator_id}/organizationlinks/{id}':
    delete:
      description: This endpoint removes the association link between an Administrator and an Organization.
      operationId: administratorOrganizations_removeByAdministrator
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Remove association between an Administrator and an Organization.
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      x-internal: false
      x-scopes:
        - administrators
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/administrators/{administrator_id}/organizationlinks/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/administrators/{administrator_id}/organizationlinks/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/administrators/{administrator_id}/organizationlinks/{id}' -Method DELETE -Headers $headers
    parameters:
      - in: path
        name: administrator_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    x-functionalities-tags:
      - admin
    x-swagger-authorization:
      - user
      - providerTenancy
      - noOrgHeaderSelection
  '/providers/{provider_id}/organizations':
    get:
      description: This endpoint returns a list of the Organizations associated with the Provider. You must be associated with the provider to use this route.
      operationId: providers_listOrganizations
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:sortIgnoreCase:sortIgnoreCase'
      responses:
        '200':
          description: ''
          schema:
            properties:
              results:
                items:
                  $ref: '#/definitions/Organization'
                type: array
              totalCount:
                type: integer
            type: object
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: List Provider Organizations
      tags:
        - Providers
        - Managed Service Provider
      x-functionalities-tags:
        - mtp-read-org
      x-internal: false
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":"","sortIgnoreCase":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations?fields=&filter=&limit=10&skip=0&sort=&sortIgnoreCase=' -Method GET -Headers $headers
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
    post:
      description: This endpoint creates a new organization under the provider
      operationId: providerOrganizations_createOrg
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateOrganization'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Organization'
        '400':
          description: |-
            A 'Bad Request' error will be returned in one of the following scenarios:

            * The request payload contains fields that are not allowed (only 'name' and 'maxSystemUsers' are allowed).
            * The user creating the org specifies 'maxSystemUsers' in the request payload but does not have the organizations.billing scope.
            * The required field 'name' is missing from the request payload or is an empty string or a string that only contains whitespaces.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: A 'Forbidden' error will be returned if organization creation is disabled for the provider.
          schema:
            $ref: '#/definitions/Error'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []
      summary: Create Provider Organization
      tags:
        - Providers
        - Managed Service Provider
      x-functionalities-tags:
        - mtp-create-org
      x-internal: false
      x-scopes:
        - providers
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"maxSystemUsers":10,"name":"Acme Inc"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations"

            payload = {
                "maxSystemUsers": 10,
                "name": "Acme Inc"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"maxSystemUsers":10,"name":"Acme Inc"}'
    x-swagger-authorization:
      - user
      - providerTenancy
      - noOrgHeaderSelection
  '/providers/{provider_id}/organizations/{id}':
    parameters:
      - in: path
        name: provider_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
    put:
      description: This endpoint updates a provider's organization
      operationId: providerOrganizations_updateOrg
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Organization'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
      security:
        - x-api-key: []
      summary: Update Provider Organization
      tags:
        - Providers
        - Managed Service Provider
      x-internal: false
      x-scopes:
        - organizations
        - organizations.billing
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"624d9eae6849cf3b3f93dc56","name":"Acme Inc"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations/{id}"

            payload = {
                "id": "624d9eae6849cf3b3f93dc56",
                "name": "Acme Inc"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/providers/{provider_id}/organizations/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"id":"624d9eae6849cf3b3f93dc56","name":"Acme Inc"}'
    x-functionalities-tags:
      - mtp-update-org
    x-swagger-authorization:
      - user
      - providerTenancy
      - noOrgHeaderSelection
  /usergroups:
    get:
      description: |-
        This endpoint returns all User Groups.

        Available filter fields:
          - `name`
          - `disabled`
          - `type`
          - `membershipMethod`
          - `suggestionCounts.add`
          - `suggestionCounts.remove`
          - `suggestionCounts.total`
          - `attributes.sudo.enabled`
          - `attributes.sudo.withoutPassword`

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_user_list
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/UserGroup'
            type: array
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
      summary: List all User Groups
      tags:
        - User Groups
      x-internal: false
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups?fields=&filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups"

            querystring = {"fields":"","filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups?fields=&filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    post:
      description: |-
        This endpoint allows you to create a new User Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request
        ```
        curl -X POST https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "{Group_Name}"
          }'
        ```
      operationId: groups_user_post
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserGroupPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: Create a new User Group
      tags:
        - User Groups
      x-internal: false
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups"

            payload = {
                "attributes": {
                    "sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    },
                    "ldapGroups": [{"name": "string"}],
                    "posixGroups": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "radius": {"reply": [
                            {
                                "name": "string",
                                "value": "string"
                            }
                        ]},
                    "sambaEnabled": True
                },
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - systems
  '/usergroups/{group_id}/activedirectories':
    get:
      description: |-
        This endpoint will return all Active Directory Instances bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Active Directory; this array represents all grouping and/or associations that would have to be removed to deprovision the Active Directory from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/activedirectories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseActiveDirectory
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Active Directories bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-internal: false
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/activedirectories?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/activedirectories"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/activedirectories?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - active-directory
  '/usergroups/{group_id}/associations':
    get:
      description: |-
        This endpoint returns the _direct_ associations of this User Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example User Groups and Users.


        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/associations?targets=system \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupAssociationsList
      parameters:
        - $ref: '#/parameters/trait:graphTargetsUserGroup:targets'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the associations of a User Group.
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-internal: false
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations"

            querystring = {"targets":"SOME_ARRAY_VALUE","limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations?targets=SOME_ARRAY_VALUE&limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint manages the _direct_ associations of this User Group.

        A direct association can be a non-homogeneous relationship between 2 different objects, for example User Groups and Users.


        #### Sample Request
        ```
        curl -X POST https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/associations \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "system",
            "id": "{SystemID}"
          }'
        ```
      operationId: graph_userGroupAssociationsPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-UserGroup'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the associations of a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-internal: false
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"active_directory"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "active_directory"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/associations' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"active_directory"}'
    x-functionalities-tags:
      - groups
      - applications
    x-swagger-jumpcloud-auto-insert: true
  '/usergroups/{group_id}/directories':
    get:
      description: |-
        This endpoint will return all Directories bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding Directory; this array represents all grouping and/or associations that would have to be removed to deprovision the Directories from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/directories \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: graph_userGroupTraverseDirectory
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Directories bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-internal: false
      x-scopes:
        - directories
        - directories.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/directories?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/directories"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/directories?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - directory
  '/usergroups/{group_id}/memberof':
    get:
      description: |-
        **********Not public yet, as the code is not finished,*************
        ********** REMOVE BEFORE MAKING ENDPOINT PUBLIC *******************

        This endpoint returns all User Groups a User Group is a member of.

        #### Sample Request
        ```
        https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/memberof
        ```
      operationId: graph_userGroupMemberOf
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Group's parents
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-internal: true
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/memberof?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/memberof"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/memberof?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/members':
    get:
      description: |-
        This endpoint returns the user members of a User Group.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupMembersList
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphConnection'
            type: array
      security:
        - x-api-key: []
      summary: List the members of a User Group
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-internal: false
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members?limit=10&skip=0' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members"

            querystring = {"limit":"10","skip":"0"}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members?limit=10&skip=0' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    post:
      description: |-
        This endpoint allows you to manage the user members of a User Group.

        #### Sample Request
        ```
        curl -X POST https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/members \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "op": "add",
            "type": "user",
            "id": "{User_ID}"
          }'
        ```
      operationId: graph_userGroupMembersPost
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/GraphOperation-UserGroup-Member'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '204':
          description: OK
      security:
        - x-api-key: []
      summary: Manage the members of a User Group
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-internal: false
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request POST \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"id":"string","op":"add","attributes":{},"type":"user"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members"

            payload = {
                "id": "string",
                "op": "add",
                "attributes": {},
                "type": "user"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("POST", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/members' -Method POST -Headers $headers -ContentType 'application/json' -Body '{"id":"string","op":"add","attributes":{},"type":"user"}'
    x-functionalities-tags:
      - groups
    x-swagger-jumpcloud-auto-insert: true
  '/usergroups/{group_id}/membership':
    get:
      description: |-
        This endpoint returns all users members that are a member of this User Group.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/membership \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupMembership
      parameters:
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the User Group's membership
      tags:
        - Graph
        - User Group Members & Membership
        - User Groups
      x-internal: false
      x-scopes:
        - users
        - users.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/membership"

            querystring = {"filter":"","limit":"10","skip":"0","sort":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/membership?filter=&limit=10&skip=0&sort=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
  '/usergroups/{group_id}/systems':
    get:
      description: |-
        This endpoint will return all Systems bound to a User Group, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User Group to the corresponding System; this array represents all grouping and/or associations that would have to be removed to deprovision the System from this User Group.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID}/systems \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userGroupTraverseSystem
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
            type: array
      security:
        - x-api-key: []
      summary: List the Systems bound to a User Group
      tags:
        - Graph
        - User Group Associations
        - User Groups
      x-internal: false
      x-scopes:
        - systems
        - systems.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/systems?limit=10&skip=0&filter=' \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/systems"

            querystring = {"limit":"10","skip":"0","filter":""}

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers, params=querystring)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{group_id}/systems?limit=10&skip=0&filter=' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: group_id
        required: true
        type: string
    x-functionalities-tags:
      - groups
      - systems
  '/usergroups/{id}':
    delete:
      description: |-
        This endpoint allows you to delete a User Group.

        #### Sample Request
        ```
        curl -X DELETE https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'

        ```
      operationId: groups_user_delete
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
        '204':
          description: No Content
      security:
        - x-api-key: []
      summary: Delete a User Group
      tags:
        - User Groups
      x-internal: false
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request DELETE \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("DELETE", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}' -Method DELETE -Headers $headers
    get:
      description: |-
        This endpoint returns the details of a User Group.

        #### Sample Request
        ```
        curl -X GET https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{GroupID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: groups_user_get
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: View an individual User Group details
      tags:
        - User Groups
      x-internal: false
      x-scopes:
        - groups
        - groups.readonly
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request GET \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id} \
              --header 'x-api-key: REPLACE_KEY_VALUE'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}"

            headers = {"x-api-key": "REPLACE_KEY_VALUE"}

            response = requests.request("GET", url, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}' -Method GET -Headers $headers
    parameters:
      - description: ObjectID of the User Group.
        in: path
        name: id
        required: true
        type: string
    patch:
      description: |-
        We have hidden PATCH on the systemgroups and usergroups for now; we don't have that implemented correctly yet, people should use PUT until we do a true PATCH operation.

        #### Sample Request
        ```
        https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}
        ```
      operationId: groups_user_patch
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserGroupPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: Partial update a User Group
      tags:
        - User Groups
      x-internal: true
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PATCH \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}"

            payload = {
                "attributes": {
                    "sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    },
                    "ldapGroups": [{"name": "string"}],
                    "posixGroups": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "radius": {"reply": [
                            {
                                "name": "string",
                                "value": "string"
                            }
                        ]},
                    "sambaEnabled": True
                },
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PATCH", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}' -Method PATCH -Headers $headers -ContentType 'application/json' -Body '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    put:
      description: |-
        This endpoint allows you to do a full update of the User Group.

        See the [Dynamic Group Configuration KB article](https://jumpcloud.com/support/configure-dynamic-device-groups) for more details on maintaining a Dynamic Group.

        #### Sample Request
        ```
        curl -X PUT https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{Group_ID} \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}' \
          -d '{
            "name": "group_update"
          }'
        ```
      operationId: groups_user_put
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserGroupPut'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserGroup'
      security:
        - x-api-key: []
      summary: Update a User Group
      tags:
        - User Groups
      x-internal: false
      x-scopes:
        - groups
      x-codeSamples:
        - lang: Shell
          source: |-
            curl --request PUT \
              --url https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id} \
              --header 'content-type: application/json' \
              --header 'x-api-key: REPLACE_KEY_VALUE' \
              --data '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
        - lang: Python
          source: |-
            import requests

            url = "https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}"

            payload = {
                "attributes": {
                    "sudo": {
                        "enabled": True,
                        "withoutPassword": True
                    },
                    "ldapGroups": [{"name": "string"}],
                    "posixGroups": [
                        {
                            "id": 0,
                            "name": "string"
                        }
                    ],
                    "radius": {"reply": [
                            {
                                "name": "string",
                                "value": "string"
                            }
                        ]},
                    "sambaEnabled": True
                },
                "description": "string",
                "email": "string",
                "memberQuery": {
                    "queryType": "Filter",
                    "filters": [None]
                },
                "memberQueryExemptions": [
                    {
                        "attributes": {},
                        "id": "string",
                        "type": "string"
                    }
                ],
                "memberSuggestionsNotify": True,
                "membershipMethod": "NOTSET",
                "name": "string"
            }
            headers = {
                "x-api-key": "REPLACE_KEY_VALUE",
                "content-type": "application/json"
            }

            response = requests.request("PUT", url, json=payload, headers=headers)

            print(response.text)
        - lang: Powershell
          source: |-
            $headers=@{}
            $headers.Add("x-api-key", "REPLACE_KEY_VALUE")
            $headers.Add("content-type", "application/json")
            $response = Invoke-RestMethod -Uri 'https://console.wok-roy-issa.dev-usw2-p02.jcplatform.dev/api/v2/usergroups/{id}' -Method PUT -Headers $headers -ContentType 'application/json' -Body '{"attributes":{"sudo":{"enabled":true,"withoutPassword":true},"ldapGroups":[{"name":"string"}],"posixGroups":[{"id":0,"name":"string"}],"radius":{"reply":[{"name":"string","value":"string"}]},"sambaEnabled":true},"description":"string","email":"string","memberQuery":{"queryType":"Filter","filters":[null]},"memberQueryExemptions":[{"attributes":{},"id":"string","type":"string"}],"memberSuggestionsNotify":true,"membershipMethod":"NOTSET","name":"string"}'
    x-functionalities-tags:
      - groups
produces:
  - application/json
responses:
  'trait:standardErrors:400':
    description: Bad Request
    schema:
      $ref: '#/definitions/ErrorDetails'
  'trait:standardErrors:401':
    description: Unauthenticated
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:403':
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:404':
    description: Not Found
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:409':
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:410':
    description: Gone
    schema:
      $ref: '#/definitions/Error'
  'trait:standardErrors:500':
    description: Internal Server Error
    schema:
      $ref: '#/definitions/Error'
schemes:
  - https
securityDefinitions:
  x-api-key:
    in: header
    name: x-api-key
    type: apiKey
swagger: '2.0'
tags:
  - name: Access Requests
  - name: AccountManagerCalendar
  - name: Active Directory
  - name: AddOn
  - name: Administrators
  - name: Aggregated Policy Stats
  - name: App Catalog
  - name: Apple MDM
  - name: Apple VPP
  - name: Applications
  - name: Authentication Policies
  - name: Bulk Job Requests
  - name: Command Templates
  - name: Commands
  - name: Countries
  - name: Custom Emails
  - name: Devices
  - name: Directories
  - name: Directory Insights
  - name: Duo
  - name: Durt
  - name: Edge
  - name: FeatureTrials
  - name: FulltextSearch
  - name: G Suite
  - name: G Suite Import
  - name: Go
  - name: Google EMM
  - name: Graph
  - name: Groups
  - name: IP Lists
  - name: Identity Providers
  - name: Image
  - name: Knowledge
  - name: LDAP Servers
  - name: Logos
  - name: Managed Service Provider
  - name: Microsoft MDM
  - name: Monitoring and Alerting
  - name: Nli
  - name: Notifications Channels
  - name: OAuthPermissions
  - name: Object Storage
  - name: Office 365
  - name: Office 365 Import
  - name: Organization Certificate
  - name: Organizations
  - name: Partners
  - name: Password Manager
  - name: Password Policy
  - name: PayNow
  - name: Plan
  - name: Plan Feature
  - name: Policies
  - name: Policy Group Associations
  - name: Policy Group Members & Membership
  - name: Policy Group Templates
  - name: Policy Groups
  - name: Policytemplates
  - name: Providers
  - name: Push
  - name: Push Verification
  - name: RADIUS Servers
  - name: Recommendations
  - name: Remote Assist
  - name: Reports
  - name: SCIM Import
  - name: SSO
  - name: SaaS App Management
  - name: Samba Domains
  - name: Saved Views
  - name: Search
  - name: Software Apps
  - name: Software Catalog
  - name: SubscriptionComponent
  - name: SubscriptionData
  - name: Subscriptions
  - name: System Group Associations
  - name: System Group Members & Membership
  - name: System Groups
  - name: System Insights
  - name: Systems
  - name: Systems Organization Settings
  - name: Trial Feature Insights
  - name: User Group Associations
  - name: User Group Members & Membership
  - name: User Groups
  - name: Users
  - name: WebAuthn
  - name: Workday Import
  - name: fde
  - name: mdm
x-scopes:
  - addons.readonly
  - administrators
  - administrators.readonly
  - anonymous
  - applications
  - applications.readonly
  - authn
  - authn.readonly
  - billing
  - commandrunner.legacy
  - commands
  - commands.readonly
  - commandtemplates
  - commandtemplates.readonly
  - directories
  - directories.readonly
  - directoryinsights.readonly
  - groups
  - groups.readonly
  - groups.self
  - healthmonitoring.alerts
  - healthmonitoring.alerts.readonly
  - healthmonitoring.rules
  - healthmonitoring.rules.readonly
  - jobs
  - jobs.readonly
  - mdm
  - mdm.readonly
  - mfa
  - mfa.readonly
  - notifications.channels
  - notifications.channels.readonly
  - organizations
  - organizations.billing
  - organizations.readonly
  - partners
  - partners.readonly
  - passwordmanager
  - passwordmanager.readonly
  - passwords
  - providers
  - providers.readonly
  - protect
  - radius
  - radius.readonly
  - remoteassist
  - remoteassist.sessions
  - settings.readonly
  - subscriptions.readonly
  - support
  - support.readonly
  - systeminsights.readonly
  - systems
  - systems.readonly
  - systems.self
  - users
  - users.readonly
  - users.self
  - vpp
  - vpp.readonly
  - accessrequest
  - accessrequest.readonly
  - saas
  - saas.readonly
  - reports
  - reports.readonly
  - accessmanagement
  - accessmanagement.readonly
  - searchapi.readonly
  - nli.readonly
x-tagGroups:
  - name: Organization
    tags:
      - Access Requests
      - Aggregated Policy Stats
      - App Catalog
      - Applications
      - Durt
      - FulltextSearch
      - G Suite
      - Go
      - Google EMM
      - Identity Providers
      - Microsoft MDM
      - Monitoring and Alerting
      - Nli
      - Notifications Channels
      - OAuthPermissions
      - Object Storage
      - Office 365
      - Organization Certificate
      - Partners
      - Password Manager
      - Password Policy
      - Policy Group Templates
      - Providers
      - Push Verification
      - RADIUS Servers
      - Remote Assist
      - Reports
      - SaaS App Management
      - Saved Views
      - Search
      - Software Apps
      - Systems
      - Systems Organization Settings
      - mdm
  - name: endpoints
    tags:
      - Access Requests
      - AccountManagerCalendar
      - Active Directory
      - AddOn
      - Administrators
      - Aggregated Policy Stats
      - App Catalog
      - Apple MDM
      - Apple VPP
      - Applications
      - Authentication Policies
      - Bulk Job Requests
      - Command Templates
      - Commands
      - Countries
      - Custom Emails
      - Devices
      - Directories
      - Directory Insights
      - Duo
      - Durt
      - Edge
      - FeatureFlags
      - FeatureTrials
      - G Suite
      - G Suite Import
      - Go
      - Google EMM
      - Graph
      - Groups
      - IP Lists
      - Identity Providers
      - Image
      - Knowledge
      - LDAP Servers
      - Logos
      - Managed Service Provider
      - Microsoft MDM
      - Monitoring and Alerting
      - Nli
      - Notifications Channels
      - OAuthPermissions
      - Object Storage
      - Office 365
      - Office 365 Import
      - Organizations
      - Partners
      - Password Manager
      - Password Policy
      - PayNow
      - Plan
      - Plan Feature
      - Policies
      - Policy Group Associations
      - Policy Group Members & Membership
      - Policy Group Templates
      - Policy Groups
      - Policytemplates
      - Providers
      - Push
      - Push Verification
      - RADIUS Servers
      - Recommendations
      - Remote Assist
      - Reports
      - Rules
      - SCIM Import
      - SSO
      - SaaS App Management
      - Samba Domains
      - Saved Views
      - Search
      - Software Apps
      - Software Catalog
      - SubscriptionComponent
      - SubscriptionData
      - Subscriptions
      - System Group Associations
      - System Group Members & Membership
      - System Groups
      - System Insights
      - Systems
      - Systems Organization Settings
      - Trial Feature Insights
      - User Group Associations
      - User Group Members & Membership
      - User Groups
      - Users
      - ValidateDomain
      - WebAuthn
      - Workday Import
      - fde
      - mdm
