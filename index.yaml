swagger: '2.0'
info:
  contact:
    name: JumpCloud Support
    url: 'https://jumpcloud.com/support/contact-jumpcloud-support'
  description: |
    # Overview

    This is a filtered subset of JumpCloud's V2 API, focusing on Organizations, Policy Groups, Users (SystemUsers), and Administrators.
    All original comments and descriptions for these specific endpoints have been preserved.

    Refer to the full JumpCloud API documentation for all capabilities.
  title: JumpCloud API (Filtered Orgs, PolicyGroups, Users, Admins)
  version: '2.0'
host: console.jumpcloud.com
basePath: /api/v2
consumes:
  - application/json
produces:
  - application/json
schemes:
  - https
securityDefinitions:
  x-api-key:
    type: apiKey
    name: x-api-key
    in: header

parameters:
  trait:multiTenantRequestHeaders:x-org-id:
    name: x-org-id
    in: header
    description: |
      Organization identifier that can be obtained from console settings.
      **NOTE** This header is required for all multi-tenant admins when making API requests to JumpCloud.
      Single Tenant Admins do not need to provide this header.
    type: string
  trait:limit:limit:
    name: limit
    in: query
    description: The number of records to return at once. Limited to 100.
    type: integer
    default: 10
  trait:skip:skip:
    name: skip
    in: query
    description: The offset into the records to return.
    type: integer
    default: 0
    minimum: 0
    required: false
  trait:filter:filter:
    name: filter
    in: query
    description: |-
      A filter to apply to the query.

      **Filter structure**: `<field>:<operator>:<value>`.

      **field** = Populate with a valid field from an endpoint response.

      **operator** =  Supported operators are: eq, ne, gt, ge, lt, le, between, search, in.
      _Note: v1 operators differ from v2 operators._

      **value** = Populate with the value you want to search for. Is case sensitive. Supports wild cards.

      **EX:** `GET /api/v2/groups?filter=name:eq:Test+Group`
    type: array
    items:
      type: string
    default: []
  trait:fields:fields:
    name: fields
    in: query
    description: |
      The comma separated fields included in the returned records.
      If omitted, the default list of fields will be returned.
    type: array
    items:
      type: string
    default: []
  trait:sort:sort:
    name: sort
    in: query
    description: |
      The comma separated fields used to sort the collection.
      Default sort is ascending, prefix with `-` to sort descending.
    type: array
    items:
      type: string
    default: []
  trait:search:search:
    default: ''
    description: The search string to query records
    in: query
    name: search
    type: string

responses:
  trait:standardErrors:400:
    description: |-
      Bad Request - The request could not be understood by the server due to malformed syntax.
      The client SHOULD NOT repeat the request without modifications.
    schema:
      $ref: '#/definitions/ErrorDetails'
  trait:standardErrors:401:
    description: |-
      Unauthenticated - The request requires user authentication.
      The client MAY repeat the request with a suitable Authorization header field.
    schema:
      $ref: '#/definitions/Error'
  trait:standardErrors:403:
    description: |-
      Unauthorized - The server understood the request, but is refusing to fulfill it.
      Authorization will not help and the request SHOULD NOT be repeated.
    schema:
      $ref: '#/definitions/Error'
  trait:standardErrors:404:
    description: |-
      Not Found - The server has not found anything matching the Request-URI.
      No indication is given of whether the condition is temporary or permanent.
    schema:
      $ref: '#/definitions/Error'
  trait:standardErrors:500:
    description: |-
      Internal Server Error - The server encountered an unexpected condition which prevented it from fulfilling the request.
    schema:
      $ref: '#/definitions/Error'

paths:
  /systemusers:
    post:
      summary: Create a system user
      description: |-
        "This endpoint allows you to create a new system user.

        #### Default User State
        The `state` of the user can be explicitly passed in or omitted. If
        `state` is omitted from the request, then the user will get created
        using the value returned from the
        [Get an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organizations_get)
        endpoint. The default user state for manually created users is stored in
        `settings.newSystemUserStateDefaults.manualEntry`

        These default state values can be changed in the admin portal settings
        or by using the
        [Update an Organization](https://docs.jumpcloud.com/api/1.0/index.html#operation/organization_put)
        endpoint.

        #### Sample Request

        ```
        curl -X POST [https://console.jumpcloud.com/api/systemusers](https://console.jumpcloud.com/api/systemusers) \
        -H 'Accept: application/json' \
        -H 'Content-Type: application/json' \
        -H 'x-api-key: {API_KEY}' \
        -d '{
              "username":"{username}",
              "email":"{email_address}",
              "firstname":"{Name}",
              "lastname":"{Name}"
            }'
        ```
      operationId: systemusers_post
      tags:
        - Systemusers
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/SystemUserPutPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - name: fullValidationDetails
          in: query
          type: string
          description: |-
            Pass this query parameter when a client wants all validation errors
            to be returned with a detailed error response for the form field
            specified. The current form fields are allowed:

            * `password`

            #### Password validation flag
            Use the `password` validation flag to receive details on a possible
            bad request response
            ```
            ?fullValidationDetails=password
            ```
            Without the flag, default behavior will be a normal 400 with only
            a single validation string error
            #### Expected Behavior
            Clients can expect a list of validation error mappings for the
            validation query field in the details provided on the response:
            ```
            {
              "code": 400,
              "message": "Password validation fail",
              "status": "INVALID_ARGUMENT",
              "details": [
                  {
                    "fieldViolationsList": [
                      {"field": "password", "description": "specialCharacter"}
                    ],
                    '@type': '[type.googleapis.com/google.rpc.BadRequest](https://type.googleapis.com/google.rpc.BadRequest)',
                  },
              ],
            },
            ```
      responses:
        '200':
          description: User added successfully
          schema:
            $ref: '#/definitions/SystemUserReturn'
        '400':
          description: User already exists or Bad Request
          schema:
            $ref: '#/definitions/ErrorDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []
    get:
      summary: List all system users
      description: |-
        This endpoint returns all systemusers.

        #### Sample Request

        ```
        curl -X GET [https://console.jumpcloud.com/api/systemusers](https://console.jumpcloud.com/api/systemusers) \
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: systemusers_list
      tags:
        - Systemusers
      parameters:
        - name: limit
          in: query
          description: The number of records to return at once.
          type: integer
          default: 10
        - name: skip
          in: query
          description: The offset into the records to return.
          type: integer
          default: 0
        - name: sort
          in: query
          description: |
            The space separated fields used to sort the collection.
            Default sort is ascending, prefix with `-` to sort descending.
          type: string
          default: ''
        - name: fields
          in: query
          description: |
            The space separated fields included in the returned records.
            If omitted the default list of fields will be returned.
          type: string
          default: ''
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:search:search'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemUsersList'
        '401':
          description: ''
          schema:
            $ref: '#/definitions/Error'
      security:
        - x-api-key: []

  /systemusers/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ObjectID of the System User.
    get:
      summary: View an individual system user
      description: This endpoint returns the details of a specific system user.
      operationId: systemusers_get
      tags:
        - Systemusers
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:fields:fields'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SystemUserReturn'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []
    put:
      summary: Update a system user
      description: This endpoint allows you to update an existing system user.
      operationId: systemusers_put
      tags:
        - Systemusers
      parameters:
        - name: body
          in: body
          required: true
          description: The system user object with updated fields.
          schema:
            $ref: '#/definitions/SystemUserPutPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: OK, system user updated
          schema:
            $ref: '#/definitions/SystemUserReturn'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []

  /users/{user_id}/systemgroups:
    parameters:
      - name: user_id
        in: path
        required: true
        type: string
        description: ObjectID of the User.
    get:
      summary: List the System Groups bound to a User
      description: |-
        This endpoint will return all System Groups bound to a User, either directly or indirectly, essentially traversing the JumpCloud Graph for your Organization.

        Each element will contain the type, id, attributes and paths.

        The `attributes` object is a key/value hash of compiled graph attributes for all paths followed.

        The `paths` array enumerates each path from this User to the corresponding System Group; this array represents all grouping and/or associations that would have to be removed to deprovision the System Group from this User.

        See `/members` and `/associations` endpoints to manage those collections.

        #### Sample Request
        ```
        curl -X GET [https://console.jumpcloud.com/api/v2/users/](https://console.jumpcloud.com/api/v2/users/){UserID}/systemgroups\
          -H 'Accept: application/json' \
          -H 'Content-Type: application/json' \
          -H 'x-api-key: {API_KEY}'
        ```
      operationId: graph_userTraverseSystemGroup
      tags:
        - Graph
        - Users
      parameters:
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:filter:filter'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GraphObjectWithPaths'
      security:
        - x-api-key: []
  /api/organizations:
    parameters:
      - name: provider_id
        in: path
        required: true
        type: string
        description: The identifier of the Provider.
    post:
      summary: Create Provider Organization
      description: This endpoint creates a new organization under the provider
      operationId: providerOrganizations_createOrg
      tags:
        - Providers
        - Managed Service Provider
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CreateOrganization'
      responses:
        '201':
          description: CREATED
          schema:
            $ref: '#/definitions/Organization'
        '400':
          description: |-
            A 'Bad Request' error will be returned in one of the following scenarios:

            * The request payload contains fields that are not allowed (only 'name' and 'maxSystemUsers' are allowed).
            * The user creating the org specifies 'maxSystemUsers' in the request payload but does not have the organizations.billing scope.
            * The required field 'name' is missing from the request payload or is an empty string or a string that only contains whitespaces.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: A 'Forbidden' error will be returned if organization creation is disabled for the provider.
          schema:
            $ref: '#/definitions/Error'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []

  /organizations:
    get:
      summary: List All Organizations
      description: This endpoint returns all Organizations accessible by the API key. For MTP admins, this could be the primary organization or all managed organizations depending on the API key's scope and if x-org-id is used.
      operationId: organizations_list_all
      tags:
        - Organizations
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: A list of organizations.
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
      security:
        - x-api-key: []
    post:
      summary: Create a new Organization
      description: This endpoint allows an appropriately permissioned administrator (e.g., MTP admin) to create a new Organization directly.
      operationId: organizations_create_direct
      tags:
        - Organizations
      parameters:
        - name: body
          in: body
          required: true
          description: Organization object to create.
          schema:
            $ref: '#/definitions/OrganizationPost'
      responses:
        '201':
          description: Organization created successfully.
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
      security:
        - x-api-key: []

  /organizations/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ObjectID of the Organization.
    get:
      summary: Get an Organization by ID
      description: This endpoint retrieves a specific Organization by its ID.
      operationId: organizations_get_by_id
      tags:
        - Organizations
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
        - $ref: '#/parameters/trait:fields:fields'
      responses:
        '200':
          description: Successfully retrieved Organization.
          schema:
            $ref: '#/definitions/Organization'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []
    put:
      summary: Update an Organization by ID
      description: This endpoint allows for updating an existing Organization by its ID.
      operationId: organizations_update_by_id
      tags:
        - Organizations
      parameters:
        - name: body
          in: body
          required: true
          description: Organization object with updated fields.
          schema:
            $ref: '#/definitions/OrganizationPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: Organization updated successfully.
          schema:
            $ref: '#/definitions/Organization'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []

  /policygroups:
    get:
      summary: List all Policy Groups
      description: This endpoint returns all Policy Groups for the organization.
      operationId: policygroups_list
      tags:
        - Policy Groups
      parameters:
        - $ref: '#/parameters/trait:fields:fields'
        - $ref: '#/parameters/trait:filter:filter'
        - $ref: '#/parameters/trait:limit:limit'
        - $ref: '#/parameters/trait:skip:skip'
        - $ref: '#/parameters/trait:sort:sort'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: A list of policy groups.
          schema:
            type: array
            items:
              $ref: '#/definitions/PolicyGroup'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
      security:
        - x-api-key: []
    post:
      summary: Create a new Policy Group
      description: This endpoint allows you to create a new Policy Group.
      operationId: policygroups_post
      tags:
        - Policy Groups
      parameters:
        - name: body
          in: body
          required: true
          description: Policy Group object to create.
          schema:
            $ref: '#/definitions/PolicyGroupPost'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '201':
          description: Policy Group created successfully.
          schema:
            $ref: '#/definitions/PolicyGroup'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
      security:
        - x-api-key: []

  /policygroups/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: string
        description: ObjectID of the Policy Group.
    get:
      summary: Get a Policy Group by ID
      description: This endpoint retrieves a specific Policy Group by its ID.
      operationId: policygroups_get
      tags:
        - Policy Groups
      parameters:
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: Successfully retrieved Policy Group.
          schema:
            $ref: '#/definitions/PolicyGroup'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []
    put:
      summary: Update a Policy Group by ID
      description: This endpoint allows for updating an existing Policy Group.
      operationId: policygroups_put
      tags:
        - Policy Groups
      parameters:
        - name: body
          in: body
          required: true
          description: Policy Group object with updated fields.
          schema:
            $ref: '#/definitions/PolicyGroupPut'
        - $ref: '#/parameters/trait:multiTenantRequestHeaders:x-org-id'
      responses:
        '200':
          description: Policy Group updated successfully.
          schema:
            $ref: '#/definitions/PolicyGroup'
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
      security:
        - x-api-key: []

  /administrators/{administrator_id}/organizationlinks/{id}:
    parameters:
      - name: administrator_id
        in: path
        required: true
        type: string
        description: The ID of the Administrator.
      - name: id
        in: path
        required: true
        type: string
        description: The ID of the organization link or organization to disassociate.
    delete:
      summary: Remove association between an Administrator and an Organization.
      description: This endpoint removes the association link between an Administrator and an Organization.
      operationId: administratorOrganizations_removeByAdministrator
      tags:
        - Administrators
        - Organizations
        - Managed Service Provider
      responses:
        '204':
          description: No Content - The link was successfully removed.
        '400':
          $ref: '#/responses/trait:standardErrors:400'
        '401':
          $ref: '#/responses/trait:standardErrors:401'
        '403':
          $ref: '#/responses/trait:standardErrors:403'
        '404':
          $ref: '#/responses/trait:standardErrors:404'
        '500':
          $ref: '#/responses/trait:standardErrors:500'
      security:
        - x-api-key: []

definitions:
  Error:
    type: object
    properties:
      message:
        type: string
        description: A human-readable error message.
      code:
        type: integer
        format: int32
        description: An internal error code.
  ErrorDetails:
    type: object
    properties:
      message:
        type: string
      code:
        type: integer
        format: int32
      status:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            fieldViolationsList:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  description:
                    type: string
            '@type':
              type: string
  SystemUserAttribute:
    type: object
    description: A key-value pair for user attributes.
    properties:
      name:
        type: string
      value:
        type: string
  SystemUserAddress:
    type: object
    description: Represents a physical address for a user.
    properties:
      type:
        type: string
        description: Type of address (e.g., 'home', 'work').
      streetAddress:
        type: string
      locality:
        type: string
      region:
        type: string
      postalCode:
        type: string
      country:
        type: string
  SystemUserPutPost:
    type: object
    description: Payload for creating or updating a System User.
    required:
      - username
      - email
    properties:
      username:
        type: string
        description: The username for the system user. Must be unique.
      email:
        type: string
        format: email
        description: The email address for the system user. Must be unique.
      firstname:
        type: string
        description: The user's first name.
      lastname:
        type: string
        description: The user's last name.
      password:
        type: string
        format: password
        description: The user's password. See password policy requirements.
      allow_public_key:
        type: boolean
        description: Whether to allow public key authentication for this user.
      attributes:
        type: array
        description: A list of custom attributes for the user.
        items:
          $ref: '#/definitions/SystemUserAttribute'
      addresses:
        type: array
        description: A list of addresses for the user.
        items:
          $ref: '#/definitions/SystemUserAddress'
  SystemUserReturn:
    type: object
    description: Represents a System User object returned by the API.
    properties:
      id:
        type: string
        readOnly: true
        description: The unique identifier for the system user.
      username:
        type: string
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      activated:
        type: boolean
        description: Indicates if the user account is activated.
      state:
        type: string
        description: The state of the user account (e.g., 'ACTIVATED', 'SUSPENDED').
      created:
        type: string
        format: date-time
        readOnly: true
        description: Timestamp of when the user was created.
      attributes:
        type: array
        items:
          $ref: '#/definitions/SystemUserAttribute'
      addresses:
        type: array
        items:
          $ref: '#/definitions/SystemUserAddress'
  SystemUsersList:
    type: object
    description: A paginated list of System Users.
    properties:
      results:
        type: array
        description: The list of system users for the current page.
        items:
          $ref: '#/definitions/SystemUserReturn'
      totalCount:
        type: integer
        description: The total number of system users matching the query.
  GraphObjectWithPaths:
    type: object
    description: Represents an object retrieved through a graph traversal, including paths.
    properties:
      id:
        type: string
      type:
        type: string
      attributes:
        type: object
        description: Compiled graph attributes for all paths followed.
        additionalProperties: true
      paths:
        type: array
        description: Enumerates each path from the source object to this target object.
        items:
          type: object
  Organization:
    type: object
    description: Represents a JumpCloud Organization.
    properties:
      id:
        type: string
        readOnly: true
        description: The unique identifier of the Organization.
      name:
        type: string
        description: The official name of the Organization.
      displayName:
        type: string
        description: The display name of the Organization, if different from name.
  CreateOrganization:
    type: object
    description: Payload for creating a new Organization under a Provider.
    properties:
      name:
        type: string
        description: The name of the new Organization.
      maxSystemUsers:
        type: integer
        description: The maximum number of system users allowed for this Organization.
  OrganizationPost:
    type: object
    description: Payload for creating or updating an Organization.
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the Organization.
      displayName:
        type: string
        description: The display name for the Organization.
  PolicyGroup:
    type: object
    description: Represents a Policy Group.
    properties:
      id:
        type: string
        readOnly: true
      name:
        type: string
      description:
        type: string
  PolicyGroupPost:
    type: object
    description: Payload for creating a Policy Group.
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string
  PolicyGroupPut:
    type: object
    description: Payload for updating a Policy Group.
    required:
      - name
    properties:
      name:
        type: string
      description:
        type: string

tags:
  - name: Systemusers
    description: Endpoints for managing system users.
  - name: Users
    description: Endpoints related to user objects, often in graph context.
  - name: Graph
    description: Endpoints for traversing the JumpCloud object graph.
  - name: Organizations
    description: Endpoints for managing organizations.
  - name: Providers
    description: Endpoints specific to Managed Service Providers (MSPs) for managing client organizations.
  - name: Managed Service Provider
    description: Tag indicating MSP-related functionality.
  - name: Policy Groups
    description: Endpoints for managing policy groups.
  - name: Administrators
    description: Endpoints for managing administrator accounts and their permissions/associations.